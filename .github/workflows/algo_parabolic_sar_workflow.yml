# This workflow will install Python dependencies and run the algo_parabolic_sar.py script.
#
# IMPORTANT: GitHub Actions are NOT designed for infinitely looping processes.
# This workflow will run for a maximum of 6 hours (default for public repos)
# and then be terminated. For a truly continuous bot, consider a dedicated server,
# cloud platform, or Docker deployment as previously discussed.

name: Algo Parabolic SAR Runner # <--- Unique name for this new workflow

on:
  push:
    branches: [ "main" ] # Triggers on push to main branch
    # --- START: Added 'paths' filter to prevent unnecessary runs ---
    paths:
      - 'Archive/algo_parabolic_sar.py'          # Include if the script is in the Archive/ folder (delete the above line if this is the case)
      - '.github/workflows/algo_parabolic_sar_workflow.yml' # Always include the workflow file itself
    # --- END: Added 'paths' filter ---
  # Allows you to manually trigger the workflow from the GitHub Actions tab
  workflow_dispatch:
    inputs:
      log_level:
        description: 'Log level'
        required: false
        default: 'info'

permissions:
  contents: read

jobs:
  run_algo: # Unique job name for this workflow
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    # NEW STEP: Get and print the public IP address of the runner
    - name: Get Runner Public IP
      id: get_ip # Assign an ID to this step to reference its outputs
      run: |
        echo "Fetching runner's public IP address..."
        PUBLIC_IP=$(curl -s ifconfig.me) # Using ifconfig.me for simplicity
        echo "ip_address=$PUBLIC_IP" >> "$GITHUB_OUTPUT" # Modern way to set step output
        echo "--------------------------------------------------------"
        echo "❗❗ Runner Public IP Address: $PUBLIC_IP ❗❗"
        echo "--------------------------------------------------------"
        echo "Please ensure this IP is whitelisted on your exchange."
        echo "--------------------------------------------------------"

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install libraries required by the Parabolic SAR algo
        pip install pandas requests pytz ta delta_rest_client

    - name: Execute Algo Parabolic SAR Script
      # Pass the IP from the previous step as an environment variable to the Python script
      # IMPORTANT: For SECURITY, you MUST replace client_credentials and Telegram tokens
      # with GitHub Secrets in your Python script and pass them here if using this method.
      # Example:
      # env:
      #   DELTA_API_KEY_1: ${{ secrets.DELTA_API_KEY_1 }}
      #   DELTA_API_SECRET_1: ${{ secrets.DELTA_API_SECRET_1 }}
      #   TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      #   TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      #   RUNNER_PUBLIC_IP: ${{ steps.get_ip.outputs.ip_address }} # Reference the output by step ID
      run: |
        # IMPORTANT: Adjust this path if 'algo_parabolic_sar.py' is NOT in the root directory.
        # For example, if it's in 'Archive/', change to: 'python Archive/algo_parabolic_sar.py'
        python Archive/algo_parabolic_sar.py

    # Optional: Add steps here for notifications on script completion/failure,
    # or to upload logs if the script exits.
