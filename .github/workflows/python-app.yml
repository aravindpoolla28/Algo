# This workflow will install Python dependencies and run your trading bot script.
#
# IMPORTANT: GitHub Actions are NOT designed for infinitely looping processes.
# This workflow will run for a maximum of 6 hours (default for public repos)
# and then be terminated. For a truly continuous bot, consider a dedicated server,
# cloud platform, or Docker deployment.

name: Trading Bot Runner # Original name for this workflow

on:
  push:
    branches: [ "main" ]
    # --- START: Added 'paths' filter to prevent unnecessary runs ---
    paths:
      #- 'trading_bot.py'                  # Include if the script is in the root directory
      - 'Archive/trading_bot.py'          # Uncomment and use this line if the script is in the Archive/ folder (delete the line above if this is the case)
      - '.github/workflows/python-app.yml' # Always include the workflow file itself
    # --- END: Added 'paths' filter ---
  # Allows you to manually trigger the workflow from the GitHub Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run_bot:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    # NEW STEP: Get and print the public IP address of the runner
    # We now set the output to a file that GITHUB_OUTPUT action can read,
    # and expose it as an environment variable to subsequent steps.
    - name: Get Runner Public IP
      id: get_ip # Assign an ID to this step to reference its outputs
      run: |
        echo "Fetching runner's public IP address..."
        PUBLIC_IP=$(curl -s ifconfig.me) # Using ifconfig.me for simplicity
        echo "ip_address=$PUBLIC_IP" >> "$GITHUB_OUTPUT" # Modern way to set step output
        echo "--------------------------------------------------------"
        echo "❗❗ Runner Public IP Address: $PUBLIC_IP ❗❗"
        echo "--------------------------------------------------------"
        echo "Please ensure this IP is whitelisted on your exchange."
        echo "--------------------------------------------------------"

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install common libraries
        pip install pandas requests pytz ta
        # Install delta_rest_client. Assuming it's pip-installable.
        pip install delta_rest_client

        # If you have a requirements.txt file, you can use this instead:
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Execute Trading Bot Script
      # Pass the IP from the previous step as an environment variable to the Python script
      # The 'env' block was re-added to pass the RUNNER_PUBLIC_IP.
      env:
        RUNNER_PUBLIC_IP: ${{ steps.get_ip.outputs.ip_address }} # Reference the output by step ID
      run: |
        # IMPORTANT: If your 'trading_bot.py' script is NOT in the root directory of your repository,
        # you need to adjust the path here. For example, if it's in an 'Archive/' folder,
        # change this line to: 'python Archive/trading_bot.py'
        python trading_bot.py # This runs your original trading_bot.py script

    # Optional: Add steps here for notifications on script completion/failure,
    # or to upload logs if the script exits.
